heat_template_version: 2016-04-08

description: >
  This template deploy a CentOS 7 instance with Galaxy production environment:
  Galaxy + NGINX + postgresql + uwsgi + PROFTPd
  Reference data volume and user volume are attached
  Reference data are downloaded


##################################
parameters:
  key_name:
    type: string
    description: Name of a KeyPair
    default: ROBOT
  vm_name:
    type: string
    label: VM name
    default: stack-vm
  image_id:
    type: string
    label: Image ID
    description: "Image to be used for compute instance: SoftwareConfig Image (ansible, puppet, salt, cfn-init, docker-compose) hooks enabled image, Generic CentOS 7 Cloud image, 2016-06-07"
    default: bd2ebc86-7930-4f90-af7b-ff94b982a2eb # CentOS7-x86_64-SoftwareConfig-20160607
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    default: small
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
    default: nova
  vol1_size:
    type: number
    description: Size of the volume to be created.
    default: 1
  vol1_mountpoint:
    type: string
    description: The directory to provide to the user
    default: /export
  vol2_size:
    type: number
    description: Size of the volume to be created.
    default: 1
  vol2_mountpoint:
    type: string
    description: The directory to provide to the user
    default: /refdata
  net_id:
    type: string
    description: ID of public sub network into which servers get deployed
    default: fe82ef7b-4bb7-4c1e-b4ec-ec5c1b0c7333
  admin_username:
    type: string
    description: Galaxy administrator username
    default: "admin"
  admin_mailaddr:
    type: string
    description: Galaxy administrator mail address
    default: "admin@indigo-datacloud.eu"
  release:
    type: string
    description: Galaxy version
    default: "master"
  export_dir:
    type: string
    description: Mountpoint directory for Galaxy
    default: '/export'
  flavor:
    type: string
    description: Galaxy flavor for tools installation
    default: "galaxy-no-tools"
  ssh_pub_key:
    type: string
    description: User ssh public key
  os_storage:
    type: string
    description: Storage type (Iaas Block Storage (default), Onedaata, Filesystem encryption)
    default: "IaaS"
  userdata_token:
    type: string
    description: Access token for onedata space
    default: "not_a_token"
  userdata_provider:
    type: string
    description: default OneProvider
    default: "not_a_provider_url"
  userdata_space:
    type: string
    description: Onedata space
    default: "galaxy"
  get_refdata:
    type: boolean
    description: Install Reference data
    default: true
  refdata_repository_name:
    type: string
    description: Onedata space name, CernVM-FS repository name or subdirectory downaload name
    default: 'elixir-italy.galaxy.refdata'
  refdata_provider_type:
    type: string
    description: Select Reference data provider type (Onedata, CernVM-FS or download)
    default: 'cvmfs'
  refdata_provider:
    type: string
    description: Oneprovider for reference data
    default: 'not_a_provider'
  refdata_token:
    type: string
    description: Access token for reference data
    default: 'not_a_token'
  refdata_cvmfs_server_url:
    type: string
    description: CernVM-FS server, replica or stratum-zero
    default: 'server_url'
  refdata_cvmfs_repository_name:
    type: string
    description: Reference data CernVM-FS repository name
    default: 'not_a_cvmfs_repository_name'
  refdata_cvmfs_key_file:
    type: string
    description: CernVM-FS public key
    default: 'not_a_key'
  refdata_cvmfs_proxy_url:
    type: string
    description: CernVM-FS proxy url
    default: 'DIRECT'
  refdata_cvmfs_proxy_port:
    type: number
    description: CernVM-FS proxy port
    default: 80
  galaxy_lrms:
    type: string
    description: select lrms. Test only, slurm will not be deployed
    default: 'local'
  refdata_dir:
    type: string
    description: Mountpoint directory for Reference Data
    default: '/refdata'

resources:

  #________________________________
  # mountpoints and ansible roles config
  ansible_setup_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: vol1_mountpoint
      - name: vol1_id
#      - name: vol2_mountpoint
#      - name: vol2_id
      config: { get_file: setup.sh }

  ansible_setup_deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config: {get_resource: ansible_setup_config}
      server: {get_resource: galaxy_server}  
      input_values:
        vol1_mountpoint: { get_param: vol1_mountpoint }
        vol1_id: { get_resource: vol1_cinder_volume }
#        vol2_mountpoint:  { get_param: vol2_mountpoint }
#        vol2_volid: { get_resource: vol2_cinder_volume }

  #________________________________
  # galaxy softwareconfig
  galaxy_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      inputs:
      - name: galaxy_admin_username
      - name: galaxy_admin_mail
      - name: galaxy_release
      - name: galaxy_flavor
      - name: galaxy_instance_key_pub
      - name: export_dir
      - name: galaxy_lrms
      - name: os_storage
      - name: userdata_token
      - name: userdata_provider
      - name: userdata_space
      - name: get_refdata
      - name: refdata_repository_name
      - name: refdata_provider_type
      - name: refdata_provider
      - name: refdata_token
      - name: refdata_cvmfs_server_url
      - name: refdata_cvmfs_repository_name
      - name: refdata_cvmfs_key_file
      - name: refdata_cvmfs_proxy_url
      - name: refdata_cvmfs_proxy_port
      - name: refdata_dir
      config: { get_file: playbook.yml }

  galaxy_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on:
      - ansible_setup_deployment
    properties:
      config: {get_resource: galaxy_config}
      server: {get_resource: galaxy_server}
      input_values:
        galaxy_admin_username: {get_param: admin_username}
        galaxy_admin_mail: {get_param: admin_mailaddr}
        galaxy_release: {get_param: release}
        galaxy_flavor: {get_param: flavor}
        galaxy_instance_key_pub: {get_param: ssh_pub_key}
        export_dir: { get_param: export_dir }
        galaxy_lrms: { get_param: galaxy_lrms }
        os_storage: { get_param: os_storage }
        userdata_token: { get_param: userdata_token }
        userdata_provider: { get_param: userdata_provider }
        userdata_space: { get_param: userdata_space }
        get_refdata: { get_param: get_refdata }
        refdata_repository_name: { get_param: refdata_repository_name }
        refdata_provider_type: { get_param: refdata_provider_type }
        refdata_provider: { get_param: refdata_provider }
        refdata_token: { get_param: refdata_token }
        refdata_cvmfs_server_url: { get_param: refdata_cvmfs_server_url }
        refdata_cvmfs_repository_name: { get_param: refdata_cvmfs_repository_name }
        refdata_cvmfs_key_file: { get_param: refdata_cvmfs_key_file }
        refdata_cvmfs_proxy_url: { get_param: refdata_cvmfs_proxy_url }
        refdata_cvmfs_proxy_port: { get_param: refdata_cvmfs_proxy_port }
        refdata_dir: { get_param: refdata_dir }

  #__________________________________
  # galaxy server deployment
  galaxy_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: vm_name }
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      availability_zone: { get_param: availability_zone }
      flavor: { get_param: instance_type }
      networks:
        - network: { get_param: net_id }
      security_groups: [ { get_resource: server_security_group } ]
      user_data_format: SOFTWARE_CONFIG

  #__________________________________
  # Volume 1
  vol1_cinder_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: vol1_size }
      availability_zone: { get_param: availability_zone }

  vol1_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: vol1_cinder_volume }
      instance_uuid: { get_resource: galaxy_server }
      mountpoint: null

#  #__________________________________
#  # Volume 2
#  vol2_cinder_volume:
#    type: OS::Cinder::Volume
#    properties:
#      size: { get_param: vol1_size }
#      availability_zone: { get_param: availability_zone }

#  refdata_volume_attachment:
#    type: OS::Cinder::VolumeAttachment
#    properties:
#      volume_id: { get_resource: vol1_cinder_volume }
#      instance_uuid: { get_resource: galaxy_server }
#      mountpoint: null

  #__________________________________
  # Security group  
  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 21
          port_range_max: 21
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80

##################################
outputs:
  vmIp:
    description: The IP address of the deployed instance
    value: { get_attr: [galaxy_server, first_address] }
  vmUuid:
    description: Resource ID assigned to the newly created instance
    value: { get_resource: galaxy_server }
  vmName:
    description: vm name 
    value: { get_param: vm_name }
  volumeUuid:
    description: Resource ID assigned to the newly created volume attached to instance
    value: { get_resource: vol1_cinder_volume }
